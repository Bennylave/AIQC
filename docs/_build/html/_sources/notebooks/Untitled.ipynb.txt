{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "conditional-associate",
   "metadata": {},
   "outputs": [],
   "source": [
    "import numpy as np"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "expired-romania",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr = [\n",
    "    [1.1, 2.2, 3.3],\n",
    "    [1.1, 2.2, 3.3],\n",
    "    [1.1, 2.2, 3.3],\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fourth-vegetation",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr = np.array(arr)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "trained-equity",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.1, 2.2, 3.3],\n",
       "       [1.1, 2.2, 3.3],\n",
       "       [1.1, 2.2, 3.3]])"
      ]
     },
     "execution_count": 4,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "id": "optional-gasoline",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[1.1, 2.2, 3.3],\n",
       "       [1.1, 2.2, 3.3],\n",
       "       [1.1, 2.2, 3.3]])"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr / 1"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "horizontal-binary",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[2.2, 4.4, 6.6],\n",
       "       [2.2, 4.4, 6.6],\n",
       "       [2.2, 4.4, 6.6]])"
      ]
     },
     "execution_count": 6,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr / 0.5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "id": "absent-phase",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr3D = [\n",
    "    [\n",
    "        [1.1, 1.1, 1.1],\n",
    "        [1.1, 1.1, 1.1],\n",
    "        [1.1, 1.1, 1.1],\n",
    "    ],\n",
    "    [\n",
    "        [2.2, 2.2, 2.2],\n",
    "        [2.2, 2.2, 2.2],\n",
    "        [2.2, 2.2, 2.2],\n",
    "    ],\n",
    "    [\n",
    "        [3.3, 3.3, 3.3],\n",
    "        [3.3, 3.3, 3.3],\n",
    "        [3.3, 3.3, 3.3],\n",
    "    ],\n",
    "]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "id": "optical-afghanistan",
   "metadata": {},
   "outputs": [],
   "source": [
    "arr3D = np.array(arr3D)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "id": "fuzzy-folks",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([[[0.80291971, 0.80291971, 0.80291971],\n",
       "        [0.80291971, 0.80291971, 0.80291971],\n",
       "        [0.80291971, 0.80291971, 0.80291971]],\n",
       "\n",
       "       [[1.60583942, 1.60583942, 1.60583942],\n",
       "        [1.60583942, 1.60583942, 1.60583942],\n",
       "        [1.60583942, 1.60583942, 1.60583942]],\n",
       "\n",
       "       [[2.40875912, 2.40875912, 2.40875912],\n",
       "        [2.40875912, 2.40875912, 2.40875912],\n",
       "        [2.40875912, 2.40875912, 2.40875912]]])"
      ]
     },
     "execution_count": 10,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "arr3D / 1.37"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "mineral-sphere",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.7"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
